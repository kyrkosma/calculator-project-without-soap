# This was built based on https://docs.microsoft.com/en-us/azure/virtual-machines/linux/tutorial-build-deploy-azure-pipelines?tabs=java
# 1. Create environment to include the VM you want to deploy code to
# 2. Create pipeline
# Created by Marios Kyrkos

# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build Maven Project

    steps:
    - script: echo Hello, world!
      displayName: 'Run a one-line script'

    - script: |
        echo Add other tasks to build, test, and deploy your project.
        echo See https://aka.ms/yaml
      displayName: 'Run a multi-line script'

    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)
    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop
      
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: VMDeploy
    displayName: web
    environment:
      name: dev-VMenv #must define this
      resourceType: VirtualMachine
    strategy:
        rolling:
          maxParallel: 5  #for percentages, mention as x%
          preDeploy:
            steps:
            - download: current
              artifact: drop
            - script: echo initialize, cleanup, backup, install certs
          deploy:
            steps:
            - task: PowerShell@2
              inputs:
                targetType: 'inline'
                script: |
                  # Modify deployment script based on the app type
                  echo "Starting deployment script run"
                  # Modify this command
                  Copy-Item "C:\azagent\A1\_work\3\drop\target\spring-mvc-showcase.war" -Destination "C:\Program Files\Apache Software Foundation\Tomcat 8.5\webapps" -Recurse -force
          routeTraffic:
            steps:
            - script: echo routing traffic
          postRouteTraffic:
            steps:
            - script: echo health check post-route traffic
          on:
            failure:
              steps:
              - script: echo Restore from backup! This is on failure
            success:
              steps:
              - script: echo Notify! This is on success